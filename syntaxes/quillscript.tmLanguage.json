{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Quillscript Language",
	"scopeName": "source.qsc",

	"patterns": [
		{ "include": "#comment"       },
		{ "include": "#router"        },
		{ "include": "#dialogue"      },
		{ "include": "#option"        },
		{ "include": "#label"         },
		{ "include": "#command"       },
		{ "include": "#condition"     },
		{ "include": "#directive"     },
		{ "include": "#text"          },
		{ "include": "#concatenation" },
		{ "include": "#instruction"   }
	],

	"repository": {
		"dialogue": {
			"match": "(\\-)(.*?(?=(\\||\\/\\/|\\n)))",

			"captures": {
				"1": { "name": "entity.name.type.class.dialogue.symbol.qsc" },
				"2": { "name": "entity.name.type.class.dialogue.main.qsc" }
			}
		},

		"option": {
			"match": "(\\*)(.*?(?=(\\||\\/\\/|\\n)))",

			"captures": {
				"1": { "name": "entity.name.type.enum.option.symbol.qsc" },
				"2": { "name": "entity.name.type.enum.option.main.qsc" }
			}
		},

		"label": {
			"match": "(@|<@>)(.*?(?=(\\||\\/\\/|\\n)))",
			"captures": { "0": { "patterns": [ { "include": "#label_instruction" } ] } }
		},

		"router": {
			"match": "(\\->|<\\->)(.*?(?=(\\||\\/\\/|\\n)))",
			"captures": { "0": { "patterns": [ { "include": "#router_instruction" } ] } }
		},

		"command": {
			"match": "(\\$)(.*?(?=(\\||\\/\\/|\\n)))",

			"captures": {
				"1": { "name": "entity.name.function.command.symbol.qsc" },
				"2": { "patterns": [ { "include": "#command_instruction" } ] }
			}
		},

		"condition": {
			"match": "(\\??)((\\s+)?)(if:|elseif|else:|endif)(.*?(?=(\\||\\/\\/|\\n)))",

			"captures": {
				"1": { "name": "keyword.operator.condition.qsc" },

				"4": {
					"name": "keyword.operator.condition.qsc",

					"patterns": [
						{
							"name": "keyword.operator.qsc",
							"match": ":"
						}
					]
				},

				"5": { "patterns": [ { "include": "#condition_instruction" } ] }
			}
		},

		"directive": {
			"match": "(~)(.*?(?=(\\||\\/\\/|\\n)))",

			"captures": {
				"1": { "name": "entity.name.other.preprocessor.macro.directive.symbol.qsc" },
				"2": { "name": "entity.name.other.preprocessor.macro.directive.main.qsc" }
			}
		},

		"comment": {
			"patterns": [
				{
					"name": "comment.title.qsc",
					"match": "\\b(SCENE|ACT|CHAPTER|SCRIPT|TITLE|HEADER|BOOK|NAME|PART|SECTION|FILE|BRANCH)\\b[ -Z]+"
				},

				{
					"comment": "Capture brackets for editor colorization",
					"match": "((\\s+)?)({|})"
				},

				{
					"name": "comment.qsc",
					"match": "(\\/\\/)(.*)"
				}
			]
		},

		"text": {
			"name": "string.qsc",
			"match": "(^.*?)(?=(\\/\\/)|(\\n))",

			"captures": {
				"1": {
					"patterns": [
						{ "include": "#definition" },
						{ "include": "#variable" },
						{ "include": "#richtext" }
					]
				}
			}
		},

		"arguments": {
			"match": "(\\()(.*)(\\))",

			"captures": {
				"1": { "name": "comment.qsc" },

				"2": {
					"patterns": [
						{
							"match": "\\,",
							"name": "comment.qsc"
						},

						{
							"match": ".",
							"name": "keyword.control.router.symbol.qsc"
						}
					]
				},

				"3": { "name": "comment.qsc" }
			}
		},

		"instruction": {
			"match": "(.*?)(?=(\\||\\/\\/|\\n))",

			"captures": {
				"1": {
					"patterns": [
						{ "include": "#label_instruction" },
						{ "include": "#router_instruction" },

						{
							"match": "(\\?)(.*)",

							"captures": {
								"1": { "name": "keyword.operator.condition.qsc" },
								"2": { "patterns": [ { "include": "#condition_instruction" } ] }
							}
						},

						{
							"match": "[\\s?](?!(\\->|<\\->|@|<@>|\\?))(\\$?)(.*)",

							"captures": {
								"2": { "name": "entity.name.function.command.symbol.qsc" },
								"3": { "patterns": [ { "include": "#command_instruction" } ] }
							}
						}
					]
				}
			}
		},

		"label_instruction": {
			"match": "(@|<@>)(.*)",

			"captures": {
				"1": { "name": "entity.name.namespace.label.symbol.qsc" },

				"2": {
					"name": "entity.name.namespace.label.main.qsc",
					"patterns": [ { "include": "#arguments" } ]
				}
			}
		},

		"router_instruction": {
			"match": "(\\->|<\\->)(.*)",

			"captures": {
				"1": { "name": "keyword.control.router.symbol.qsc" },

				"2": {
					"name": "keyword.control.router.main.qsc",
					"patterns": [ { "include": "#arguments" } ]
				}
			}
		},

		"command_instruction": {
			"match": "(.*\\=.*)|(.*)",

			"captures": {
				"1": {
					"patterns": [
						{
							"match": "(.*)(\\=)(.*)",

							"captures": {
								"1": {
									"patterns": [
										{
											"name": "keyword.operator.qsc",
											"match": ":|\\.|\\+|\\-|\\*|\\/|\\%|\\^"
										},
										{
											"name": "entity.name.function.command.main.qsc",
											"match": "\\w+"
										}
									]
								},

								"2": { "name": "keyword.operator.qsc" },

								"3": {
									"name": "string.qsc",

									"patterns": [
										{ "include": "#variable" },
										{ "include": "#definition" },
										{ "include": "#richtext" },
										{ "include": "#operator" },
										{ "include": "#parentheses" },
										{ "include": "#number" },
										{ "include": "#keyword" }
									]
								}
							}
						}
					]
				},

				"2": {
					"patterns": [
						{
							"match": "[\\s]?([\\&\\^\\%]?)(.*)",

							"captures": {
								"1": { "name": "entity.name.function.command.symbol.qsc" },

								"2": {
									"name": "entity.name.function.command.main.qsc",

									"patterns": [
										{
											"match": "(.*?)\\s(.*)",

											"captures": {
												"1": {
													"patterns": [
														{
															"name": "keyword.operator.qsc",
															"match": "\\."
														},

														{ "include": "#variable" },
														{ "include": "#definition" }
													]
												},

												"2": {
													"name": "string.qsc",

													"patterns": [
														{ "include": "#variable" },
														{ "include": "#definition" },
														{ "include": "#richtext" },
														{ "include": "#number" },
														{ "include": "#keyword" }
													]
												}
											}
										}
									]
								}
							}
						}
					]
				}
			}
		},

		"condition_instruction": {
			"match": ".*",

			"captures": {
				"0": {
					"name": "string.qsc",

					"patterns": [
						{ "include": "#variable" },
						{ "include": "#definition" },
						{ "include": "#richtext" },
						{ "include": "#operator" },
						{ "include": "#parentheses" },
						{ "include": "#number" },
						{ "include": "#keyword" }
					]
				}
			}
		},

		"concatenation": {
			"name": "keyword.operator.concat.qsc",
			"match": "\\|"
		},

		"definition": {
			"name": "entity.name.other.preprocessor.macro.directive.param.qsc",
			"match": "\\[\\[[^\\s]+\\]\\]"
		},

		"variable": {
			"name": "variable.other.property.qsc",
			"match": "{[^\\s]+}"
		},

		"richtext": {
			"name": "entity.name.tag.qsc",
			"match": "<(\\w*).*?>"
		},

		"operator": {
			"name": "keyword.operator.qsc",
			"match": "=|\\~|\\b(and|AND|or|OR)\\b|==|!=|>=|<=|(?<!-)>|<|\\+|-(?!>)|\\*|\/|\\%|\\^"
		},

		"parentheses": {
			"name": "keyword.operator.parentheses.qsc",
			"match": "\\(|\\)"
		},

		"number": {
			"name": "constant.number.qsc",
			"match": "(?<!\\w)([\\d]+)(?!\\w)"
		},

		"keyword": {
			"name": "constant.language.qsc",
			"match": "\\b(true|false|on|off|null|nullptr)\\b"
		}
	}
}
