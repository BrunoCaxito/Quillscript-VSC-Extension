{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Quillscript Language",
	"scopeName": "source.qsc",

	"patterns": [
		{ "include": "#dialogue"  },
		{ "include": "#label"     },
		{ "include": "#goto"      },
		{ "include": "#option"    },
		{ "include": "#command"   },
		{ "include": "#directive" },
		{ "include": "#comment"   },
		{ "include": "#text"      }
	],

	"repository": {
		"dialogue": {
			"match": "^\\t*(\\-\\ )(.*?)(?=\\||$)(.*$)",

			"captures": {
				"1": { "name": "entity.name.type.class.dialogue.sign.qsc" },

				"2": {
					"name": "entity.name.type.class.dialogue.main.qsc",

					"patterns": [
						{ "include": "#variable" },

						{ "include": "#definition" },

						{ "include": "#richtext" }
					]
				},

				"3": { "patterns": [ { "include": "#metadata" } ] }
			}
		},

		"option": {
			"match": "^\\t*(\\*\\ )(.*?)(?=\\||$)(.*$)",

			"captures": {
				"1": { "name": "entity.name.type.enum.option.sign.qsc" },

				"2": {
					"name": "entity.name.type.enum.option.main.qsc",
					"patterns": [
						{ "include": "#variable" },

						{ "include": "#definition" },

						{ "include": "#richtext" }
					]
				},

				"3": { "patterns": [ { "include": "#metadata" } ] }
			}
		},

		"label": {
			"match": "^\\t*(@\\ )(.*?)(?=\\ \\||$)(.*$)",

			"captures": {
				"1": { "name": "entity.name.namespace.label.sign.qsc" },

				"2": { "patterns": [ { "include": "#label_instruction" } ] },

				"3": { "patterns": [ { "include": "#metadata" } ] }
			}
		},

		"goto": {
			"match": "^\\t*(\\->\\ )(.*?)(?=\\||$)(.*$)",

			"captures": {
				"1": { "name": "keyword.control.goto.sign.qsc" },

				"2": { "patterns": [ { "include": "#goto_instruction" } ] },

				"3": { "patterns": [ { "include": "#metadata" } ] }
			}
		},

		"command": {
			"match": "^\\t*(\\$\\ )(.*?)(?=\\||$)(.*$)",

			"captures": {
				"1": { "name": "entity.name.function.command.sign.qsc" },

				"2": { "patterns": [ { "include": "#command_instruction" } ] },

				"3": { "patterns": [ { "include": "#metadata" } ] }
			}
		},

		"directive": {
			"match": "^\\t*(\\~\\ )(\\w+)(.*$)",

			"captures": {
				"1": { "name": "entity.name.other.preprocessor.macro.directive.sign.qsc" },

				"2": { "name": "entity.name.other.preprocessor.macro.directive.main.qsc" },

				"3": { "name": "entity.name.other.preprocessor.macro.directive.param.qsc" }
			}
		},

		"comment": {
			"patterns": [
				{
					"name": "comment.title.qsc",
					"match": "(SCENE|ACT|CHAPTER)[ -Z]+"
				},

				{
					"name": "comment.header.qsc",
					"match": "(\\s*|\\t*)([0-9A-Z\\s\\.\\-\\'\\,]{12,})",
					"captures": {
						"1": {
							"name": "comment.header.indentation.qsc"
						},

						"2": {
							"name": "comment.header.main.qsc"
						}
					}
				},

				{
					"name": "comment.line.qsc",
					"match": "^\\t*(//\\ )(.*$)",
					"captures": {
						"1": {
							"name": "comment.line.sign.qsc"
						},

						"2": {
							"name": "comment.line.main.qsc",
							"patterns": [
								{
									"name": "comment.line.text.topic.qsc",
									"match": "<>"
								}
							]
						}
					}
				}
			]
		},

		"text": {
			"name": "string.qsc",
			"match": "^.*",

			"captures": {
				"0": {
					"patterns": [
						{ "include": "#richtext" },

						{ "include": "#variable" },

						{ "include": "#definition" }
					]
				}
			}
		},

		"metadata": {
			"match": "(\\|)(.*?)(?=(\\||$))",

			"captures": {
				"1": { "name": "keyword.operator.concat.qsc" },

				"2": {
					"patterns": [
						{ "include": "#instruction" },

						{ "include": "#definition" }
					]
				}
			}
		},

		"instruction" : {
			"match": "(\\@.[^\\s].*)|(\\?.[^\\s].*)|(\\$.[^\\s].*)|(->.[^\\s].*)|(\\#.[^\\s].*)|(\\w+.*)",

			"captures": {
				"1": { "patterns": [ { "include": "#label_instruction" } ] },

				"2": { "patterns": [ { "include": "#condition" } ] },

				"3": { "patterns": [ { "include": "#command_instruction" } ] },

				"4": { "patterns": [ { "include": "#goto_instruction" } ] },

				"5": { "patterns": [ { "include": "#tag" } ] }
			}
		},

		"label_instruction": {
			"patterns": [
				{
					"name": "entity.name.namespace.label.sign.qsc",
					"match": "\\@"
				},

				{
					"name": "entity.name.namespace.label.main.qsc",
					"match": "\\w+"
				},

				{ "include": "#definition" }
			]
		},

		"goto_instruction": {
			"patterns": [
				{
					"name": "keyword.control.goto.sign.qsc",
					"match": "\\-\\>"
				},

				{
					"name": "keyword.control.goto.main.qsc",
					"match": "\\w+"
				},

				{ "include": "#variable" },

				{ "include": "#definition" }
			]
		},

		"command_instruction": {
			"patterns": [
				{
					"name": "entity.name.function.command.sign.qsc",
					"match": "\\$"
				},

				{
					"name": "entity.name.function.command.main.qsc",
					"match": "\\w+"
				},

				{ "include": "#richtext" },

				{ "include": "#operator" },

				{ "include": "#number" },

				{ "include": "#keyword" },

				{ "include": "#variable" },

				{ "include": "#definition" }
			]
		},

		"condition": {
			"patterns": [
				{
					"name": "entity.name.namespace.condition.sign.qsc",
					"match": "\\?"
				},

				{
					"name": "entity.name.namespace.condition.main.qsc",
					"match": "\\w+"
				},

				{ "include": "#richtext" },

				{ "include": "#operator" },

				{ "include": "#number" },

				{ "include": "#keyword" },

				{ "include": "#variable" },

				{ "include": "#definition" }
			]
		},

		"tag": {
			"patterns": [
				{
					"name": "variable.other.constant.tag.qsc",
					"match": "\\#"
				},

				{
					"name": "variable.other.constant.qsc",
					"match": "\\w+"
				}
			]
		},

		"variable": {
			"name": "variable.other.property.qsc",
			"match": "{\\w+}"
		},

		"definition": {
			"name": "entity.name.other.preprocessor.macro.directive.main.qsc",
			"match": "\\[\\[\\w+\\]\\]"
		},

		"richtext": {
			"name": "entity.name.tag.qsc",
			"match": "<(\\w*).*?>"
		},

		"operator": {
			"name": "keyword.operator.qsc",
			"match": "==|!=|>=|<=|(?<!-)>|<|=|\\+|-(?!>)|\\*|\/"
		},

		"keyword": {
			"name": "constant.language.qsc",
			"match": "true|false|on|off|null"
		},

		"number": {
			"name": "constant.numeric.qsc",
			"match": "(?<!\\w)([\\d]+)(?!\\w)"
		}
	}
}
